getwd()
BiocManager::install("enrichplot")
library(enrichplot)
getwd()
library(enrichplot)
library(RColorBrewer)
library(ggplot2)
BiocManager::install("clusterProfiler")
remotes::install_github("YuLab-SMU/aplotExtra")
remotes::install_github("YuLab-SMU/aplotExtra", force = T)
getwd()
devtools::load_all("/Users/hinna/TCMDATA")
install.packages("openxlsx")
devtools::load_all("/Users/hinna/TCMDATA")
devtools::load_all("/Users/hinna/desktop/nanh/yulab/pharmacology/TCMDATA")
herbs <- c("灵芝")
lz <- search_herb(herb = herbs, type = "Herb_cn_name")
devtools::load_all("/Users/hinna/Desktop/nanh/yulab/pharmacology/TCMDATA")
devtools::load_all("/Users/hinna/Desktop/nanh/yulab/pharmacology/TCMDATA-master")
herbs <- c("灵芝")
lz <- search_herb(herb = herbs, type = "Herb_cn_name")
## sankey plot
source("TCM_sankey.R")
getwd()
## sankey plot
source("./R/TCM_sankey.R")
## sankey plot
source("/R/TCM_sankey.R")
getwd()
# You may obtain your genes of interest by `intersect(lz$target, DE_genes)`
set.seed(2025)
g <- sample(lz$target, 200)
library(clusterProfiler)
x <- enrichGO(g, ont="MF", OrgDb='org.Hs.eg.db', keyType="SYMBOL")
BiocManager::install("org.Hs.eg.db")
x <- enrichGO(g, ont="MF", OrgDb='org.Hs.eg.db', keyType="SYMBOL")
## basic version
library(enrichplot)
cnetplot(x)
dotplot(x)
barplot(x)
## lollipop_plot
source("gglollipop.R")
## lollipop_plot
source("/R/gglollipop.R")
getwd()
## lollipop_plot
source("/Users/hinna/TCMDATA/R/gglollipop.R")
gg1 <- gglollipop(x)
gg2 <- gglollipop(x, color = "qvalue", orderBy = "Count")
gg3 <- gglollipop(x, line.col = "orange", line.type = "dashed", palette = "PiYG")
gg4 <- gglollipop(x, line.col = "skyblue", line.type = "dashed", palette = "Spectral", show_count = F)
aplot::plot_list(gg1, gg2, gg3, gg4, ncol = 2)
## get PPI
ppi <- clusterProfiler::getPPI(g, taxID = 9606)
library(ggtangle)
library(ggrepel)
library(ggraph)
library(tidygraph)
library(igraph)
library(dplyr)
library(aplot)
source("/Users/hinna/TCMDATA/R/PPI_utils.R")
## basic PPI plot using ggtangle
# add params into ppi obj
V(ppi)$degree <- degree(ppi)
V(ppi)$centrality <- betweenness(ppi)
p1 <- ggtangle::ggplot(ppi, layout = "circle") +
geom_edge(alpha = 0.3) +
geom_text_repel(aes(label = name), size = 3) +
geom_point(aes(color = degree, size = centrality)) +
scale_color_viridis_c()
p1
## subset edges which have a score higher than 0.7
ppi_hub <- igraph::subgraph_from_edges(ppi, eids = E(ppi)[score >= 0.7], delete.vertices = TRUE)
p2 <- ggtangle::ggplot(ppi_hub, layout = "kk") +
geom_edge(alpha = 0.4) +
geom_text_repel(aes(label = name), size = 3) +
geom_point(aes(color = degree, size = centrality)) +
scale_color_viridis_c()
p2
## subset nodes which have top 15 degree nodes based on 'p2'
ppi_hub_update <- ppi_subset(ppi_hub, n = 15)
p3 <- ggtangle::ggplot(ppi_hub_update, layout = "kk") +
geom_edge(alpha = 0.4) +
geom_text_repel(aes(label = name), size = 3) +
geom_point(aes(color = degree, size = centrality)) +
scale_color_viridis_c()
p3
plot_list(p2, p3)
## an expression data example
expr_df <- data.frame(
name = V(ppi_hub)$name,
logFC = rnorm(vcount(ppi_hub), 0, 2),
group = sample(c("up", "down"), vcount(ppi_hub), replace = TRUE)
)
p4 <- ggtangle::ggplot(ppi_hub, layout = "circle") %<+% expr_df +
geom_edge(alpha = 0.2) +
geom_point(aes(color = logFC, shape = group, size = centrality)) +
geom_text_repel(aes(label = name), size = 3) +
scale_color_gradient2(low = "blue", mid = "white", high = "red") +
theme_void()
p4
library(scatterpie)
## using sample data
pie_data <- data.frame(
name = V(ppi_hub)$name,
A = runif(vcount(ppi_hub)),
B = runif(vcount(ppi_hub)),
C = runif(vcount(ppi_hub)),
D = runif(vcount(ppi_hub))
)
p5 <- ggtangle::ggplot(ppi_hub, layout = "circle") %<+% pie_data +
geom_edge(alpha = 0.25) +
geom_scatterpie(cols = c("A", "B", "C", "D"), color = NA) +
geom_text_repel(aes(label = name), size = 3) +
coord_fixed()
p5
## using enrich_obj 'x' in the former enrichGO
pie_data1 <- getPieData(enrich_obj = x, ppi_genes = V(ppi_new)$name, use_weight = F)
## using enrich_obj 'x' in the former enrichGO
pie_data1 <- getPieData(enrich_obj = x, ppi_genes = V(ppi)$name, use_weight = F)
p6 <- ggplot(ppi_hub, layout = "fr") %<+% pie_data1 +
geom_edge(alpha = 0.3) +
geom_scatterpie(cols = names(pie_data1)[-1], color = NA) +
geom_text(aes(label = name), size = 2) +
coord_fixed() +
theme_void()
p6
## using p-value to adjust the proportion of scatterpie
pie_data2 <- getPieData(enrich_obj = x, ppi_genes = V(ppi_new)$name, use_weight = T, weight_scale = "logp")
## using p-value to adjust the proportion of scatterpie
pie_data2 <- getPieData(enrich_obj = x, ppi_genes = V(ppi)$name, use_weight = T, weight_scale = "logp")
p7 <- ggplot(ppi_hub, layout = "fr") %<+% pie_data2 +
geom_edge(alpha = 0.3) +
geom_scatterpie(cols = names(pie_data2)[-1], color = NA) +
geom_text(aes(label = name), size = 2) +
coord_fixed() +
theme_void()
p7
plot_list(p6, p7)
plot_list(p6, p7, ncol = 2)
plot_list(p6, p7, ncol = 1)
source("ggvenn_plot.R")
source("/Users/hinna/TCMDATA/R/ggvenn_plot.R")
source("/Users/hinna/TCMDATA/R/getvennresult.R")
source("/Users/hinna/TCMDATA/R/getvenndata.R")
load("/Users/hinna/TCMDATA/data/venn_demo_data.rda")
load("/Users/hinna/TCMDATA/data/venn_data.rda")
View(venn_data)
View(venn_data)
p8 <- ggvenn_plot(venn_data)
p8
p9 <-ggvenn_plot(venn_data, col_names = c("TCM_targets","DEGs","Markers"),
set.color = c("#FF8748", "#5BAA56", "#B8BB5B"),
stroke.color = "white")
p10 <- aplotExtra::upset_plot(venn_data)
p10
load("/Users/hinna/TCMDATA/data/venn_demo_data.rda")
## get venn data
tcm <- venn_demo_data$TCM
degs <- venn_demo_data$DEGs
markers <- venn_demo_data$Markers
db <- venn_demo_data$DB
venn_input <- getvenndata(TCM_targets = tcm, DEGs = degs,
Markers = markers, DB_targets = db)
p8 <- ggvenn_plot(venn_input)
p9 <-ggvenn_plot(venn_input, col_names = c("TCM_targets","DEGs","Markers"),
set.color = c("#FF8748", "#5BAA56", "#B8BB5B"),
stroke.color = "white")
plot_list(p8, p9)
p10 <- aplotExtra::upset_plot(venn_input)
p10
p10 <- aplotExtra::upset_plot(venn_demo_data)
p10
p11 <- upset_plot(venn_demo_data, color.intersect.by = "Set2",
color.set.by = "Dark2")
p11 <- aploExtra::upset_plot(venn_demo_data, color.intersect.by = "Set2",
color.set.by = "Dark2")
p11 <- aplotExtra::upset_plot(venn_demo_data, color.intersect.by = "Set2",
color.set.by = "Dark2")
p11
plot_list(p10, p11)
devtools::load_all("/Users/hinna/Desktop/nanh/yulab/pharmacology/TCMDATA-master")
herbs <- c("灵芝")
lz <- search_herb(herb = herbs, type = "Herb_cn_name")
# You may obtain your genes of interest by `intersect(lz$target, DE_genes)`
set.seed(2025)
g <- sample(lz$target, 200)
library(clusterProfiler)
x <- enrichGO(g, ont="MF", OrgDb='org.Hs.eg.db', keyType="SYMBOL")
## lollipop_plot
source("/Users/hinna/TCMDATA/R/gglollipop.R")
gg1 <- gglollipop(x)
library(ggplot2)
gg1 <- gglollipop(x)
gg2 <- gglollipop(x, color = "qvalue", orderBy = "Count")
gg3 <- gglollipop(x, line.col = "orange", line.type = "dashed", palette = "PiYG")
gg4 <- gglollipop(x, line.col = "skyblue", line.type = "dashed", palette = "Spectral", show_count = F)
aplot::plot_list(gg1, gg2, gg3, gg4, ncol = 2)
load("/Users/hinna/TCMDATA/data/venn_demo_data.rda")
# venn_res1 <- aplotExtra::get_all_subsets(venn_demo_data)
venn_res2 <- aplotExtra:::get_all_subsets_items(venn_demo_data)
venn_res2[[5]] |> head()
View(venn_demo_data)
View(venn_res2)
venn_res1 <- aplotExtra::get_all_subsets(venn_demo_data)
View(venn_res1)
venn_res2[[7]] |> head()
length(venn_res2[[7]])
names(venn_res2)
rownames(venn_res2)
setNames(venn_res2, 1:15)
View(venn_res2)
View(venn_res2)
length(venn_res2)
str(venn_res2)
aplotExtra:::get_all_subsets_names(venn_demo_data)
aplotExtra:::get_all_subsets_ids(venn_demo_data)
View(venn_res1)
## 添加具体交集的名称
names(venn_res2) <- aplotExtra:::get_all_subsets_names(venn_demo_data)
View(venn_res2)
venn_res2
venn_res2 |> str()
## 查看TCM/DEGs的交集
td <- venn_res2[["TCM/DEGs"]]
td |> head(10)
getFromNamespace
getFromNamespace(aplotExtra)
getFromNamespace("aplotExtra")
gasn <- getFromNamespace("get_all_subsets_names", "aplotExtra")
View(gasn)
ggsn(venn_demo_data)
gasn(venn_demo_data)
